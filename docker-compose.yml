version: '3.8'

services:
  zenoh_bridge:
    image: eclipse/zenoh-bridge-ros2dds:latest
    container_name: zenoh_bridge
    network_mode: host
    privileged: true
    environment:
      - ROS_DISTRO=humble
    volumes:
      - ./zenoh/zenoh_bridge_config.json5:/config/zenoh_bridge_config.json5:ro
    command: "-c /config/zenoh_bridge_config.json5"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  unitree_go2_sdk:
    build: .
    image: openmindagi/unitree_go2_sdk:latest
    container_name: unitree_go2_sdk
    network_mode: host
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - ROS_DOMAIN_ID=0
      - CYCLONEDDS_HOME=/app/cyclonedds/install
      - CYCLONEDDS_URI=file:///cyclonedds/cyclonedds.xml
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./cyclonedds:/cyclonedds
      - .:/ros2_ws/src/unitree_go2_ros2_sdk:rw
      - ./maps:/ros2_ws/maps:rw
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  om1_sensor:
    build:
      context: .
    image: openmindagi/unitree_go2_sdk:latest
    container_name: om1_sensor
    network_mode: host
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/bus/usb:/dev/bus/usb
    privileged: true
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - ROS_DOMAIN_ID=0
      - CYCLONEDDS_HOME=/app/cyclonedds/install
      - CYCLONEDDS_URI=file:///cyclonedds/cyclonedds.xml
    command: "ros2 launch go2_sdk sensor_launch.py"
    volumes:
      - /dev:/dev
      - /run/udev:/run/udev:ro
      - /sys:/sys:ro
      - ./cyclonedds:/cyclonedds
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  watchdog:
    build:
      context: .
    image: openmindagi/unitree_go2_sdk:latest
    container_name: watchdog
    network_mode: host
    privileged: true
    environment:
      - SENSOR_TIMEOUT_DURATION=30.0
    command: "python3 watchdog/watch_sensor.py"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.05
    alpha2: 0.1
    alpha3: 0.05
    alpha4: 0.05
    alpha5: 0.05
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: False
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 12.0
    laser_min_range: 0.1
    laser_model_type: "likelihood_field"
    max_beams: 180
    max_particles: 8000
    min_particles: 2000
    odom_frame_id: "odom"
    pf_err: 0.01
    pf_z: 0.95
    recovery_alpha_fast: 0.3
    recovery_alpha_slow: 0.01
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: True
    transform_tolerance: 0.5  # Reduced from 1.0
    update_min_a: 0.005
    update_min_d: 0.02
    z_hit: 0.85
    z_max: 0.05
    z_rand: 0.05
    z_short: 0.15
    scan_topic: scan
    set_initial_pose: True
    initial_pose_x: 0.0
    initial_pose_y: 0.0
    initial_pose_z: 0.0
    initial_pose_a: 0.0

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    transform_tolerance: 0.5  # Reduced from 1.0
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 40.0  # Increased from 5.0 for MPPI
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.5
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3  # Increased slightly
      movement_time_allowance: 20.0  # Increased from 15.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25  

    # MPPI Controller - optimized for Unitree Go2
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 56  # Prediction horizon steps
      model_dt: 0.05  # Time between steps (50ms)
      batch_size: 2000  # Number of trajectories to sample
      vx_std: 0.2  # Std dev for forward velocity sampling
      vy_std: 0.0  # No lateral movement for quadruped
      wz_std: 0.4  # Std dev for rotational velocity sampling
      vx_max: 0.4  # Max forward velocity
      vx_min: -0.15  # Max backward velocity
      vy_max: 0.0
      wz_max: 1.2  # Max rotation rate
      iteration_count: 1  # MPPI iterations per control cycle
      prune_distance: 1.7  # Distance ahead to prune path
      transform_tolerance: 0.3
      temperature: 0.3  # Lower = more exploitation vs exploration
      gamma: 0.015  # Discount factor
      motion_model: "DiffDrive"  # Use DiffDrive for Go2
      visualize: False  # Set to True for debugging
      regenerate_noises: False
      
      # Cost function weights (tune these for your needs)
      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      
      ConstraintCritic:
        enabled: True
        cost_power: 1
        cost_weight: 4.0
      
      GoalCritic:
        enabled: True
        cost_power: 1
        cost_weight: 5.0  # High weight for reaching goal
        threshold_to_consider: 1.4
      
      GoalAngleCritic:
        enabled: True
        cost_power: 1
        cost_weight: 15.0  # Important for final orientation
        threshold_to_consider: 0.5
      
      PreferForwardCritic:
        enabled: True
        cost_power: 1
        cost_weight: 3.0  # Penalize backward motion
        threshold_to_consider: 0.5
      
      # Obstacle and path following
      CostCritic:
        enabled: True
        cost_power: 1
        cost_weight: 3.81
        critical_cost: 300.0
        consider_footprint: True
        collision_cost: 1000000.0
        near_goal_distance: 0.5
        trajectory_point_step: 2
      
      PathAlignCritic:
        enabled: True
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 4
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: False
      
      PathFollowCritic:
        enabled: True
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      
      PathAngleCritic:
        enabled: True
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0

      # Noise generator settings
      noise_generator_config:
        default: 
          time_steps: 56
          batch_size: 2000
          vx_std: 0.2
          wz_std: 0.4
          vx_mu: 0.0
          wz_mu: 0.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: True
      width: 3
      height: 3
      resolution: 0.05
      footprint: "[[0.3, 0.2], [0.3, -0.2], [-0.3, -0.2], [-0.3, 0.2]]"
      plugins: ["static_layer", "obstacle_layer", "stvl_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      
      # STVL for 4D LiDAR pointcloud (optimized for ground obstacles)
      stvl_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled: True
        voxel_decay: 0.8  # Faster decay for dynamic ground obstacles
        decay_model: 0  # 0=linear, 1=exponential, 2=persistent
        voxel_size: 0.04  # 4cm voxels for better ground detail
        track_unknown_space: True
        observation_persistence: 0.0
        max_obstacle_height: 2.5  # Full height detection with 4D LiDAR
        min_obstacle_height: 0.15  # 15.0cm - lower threshold for ground obstacles
        obstacle_max_range: 2.5  # Focused range for ground detection
        obstacle_min_range: 0.25  # Minimum range to avoid self-detection
        origin_z: 0.0
        publish_voxel_map: True
        transform_tolerance: 0.5
        mapping_mode: False
        map_save_duration: 60.0
        combination_method: 1  # 0=max, 1=override
        update_footprint_enabled: True
        
        # 4D LiDAR as observation source
        observation_sources: lidar_4d
        
        # 4D LiDAR pointcloud configuration (Unitree Go2)
        lidar_4d:
          data_type: PointCloud2
          topic: /utlidar/cloud_deskewed  # Motion-compensated pointcloud
          marking: True
          clearing: True
          min_obstacle_height: 0.15  # 15.0cm threshold for ground obstacles
          max_obstacle_height: 2.5  # Full height coverage
          expected_update_rate: 15.0  # Unitree 4D LiDAR at ~15Hz
          observation_persistence: 0.0
          inf_is_valid: False
          filter: "voxel"
          voxel_min_points: 1  # Lower threshold for ground obstacle sensitivity
          clear_after_reading: True
          enabled: True
          model_type: 1  # 1=3d_lidar (for 4D LiDAR)
          
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 1.5
        inflation_radius: 0.23 # lower inflation radius for tight space navigation
      
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      footprint: "[[0.3, 0.2], [0.3, -0.2], [-0.3, -0.2], [-0.3, 0.2]]"
      resolution: 0.1
      track_unknown_space: True
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 3.5
          obstacle_min_range: 0.0
      
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.3
      
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    transform_tolerance: 0.1
    use_sim_time: False
    planner_plugins: ["GridBased"]
    # Using SmacPlanner2D for better orientation handling
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.3
      downsample_costmap: False
      downsampling_factor: 1
      allow_unknown: True
      max_iterations: 1000000
      max_on_approach_iterations: 1000
      smooth_path: True

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
      backup_dist: 0.5
      backup_speed: 0.15
      time_allowance: 10.0
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.5
    use_sim_time: False
    simulate_ahead_time: 2.5
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: False
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.4, 0.0, 1.2]  # Updated for MPPI limits
    min_velocity: [-0.15, 0.0, -1.2]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

name: Unitree Go2 ROS2 SDK Release
on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  amd64:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: openmindagi/unitree_go2_sdk
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          flavor: |
            suffix=-amd64
      - name: Build and push AMD64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: openmindagi/unitree_go2_sdk
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          flavor: |
            suffix=-arm64
      - name: Build and push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: [amd64, arm64]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create and push multi-platform manifest
        run: |
          # Get tags without suffix from amd64 job, then remove -amd64 suffix
          tags=$(echo '${{ needs.amd64.outputs.tags }}' | sed 's/-amd64$//')

          for tag in $tags; do
            echo "Creating manifest for: $tag"
            docker manifest create $tag \
              --amend ${tag}-amd64 \
              --amend ${tag}-arm64 \
              --insecure
            docker manifest push $tag
          done

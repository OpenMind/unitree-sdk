name: Unitree Go2 ROS2 SDK Release
on:
  push:
    branches: main
    
  release:
    types: [published]

  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      metadata: ${{ steps.meta.outputs.json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: openmindagi/unitree_go2_sdk
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=sha

      - name: Build and push AMD64 image by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  build-arm64:
    runs-on: ubuntu-22.04-arm  # Your ARM64 runner
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: openmindagi/unitree_go2_sdk
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }},prereleases=true
            type=sha

      - name: Build and push ARM64 image by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          # Get the metadata from amd64 build to extract tags
          tags=$(echo '${{ needs.build-amd64.outputs.metadata }}' | jq -r '.tags[]')

          # Create manifest for each tag
          for tag in $tags; do
            echo "Creating manifest for: $tag"

            docker buildx imagetools create \
              --tag $tag \
              openmindagi/unitree_go2_sdk@${{ needs.build-amd64.outputs.image-digest }} \
              openmindagi/unitree_go2_sdk@${{ needs.build-arm64.outputs.image-digest }}
          done
